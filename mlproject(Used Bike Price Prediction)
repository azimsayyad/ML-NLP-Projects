# -*- coding: utf-8 -*-
"""MLProject

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HH6jIPWHUZI9wLhOmlRpy9_pf8Tcsqme

**Machine Learning Project on Used Bike Price Prediction**

**Importing Libraries**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_excel('/content/drive/MyDrive/Colab Notebooks/Used_bikes')  #Reading the excel file

df  #Displaying the dataframe

"""**EDA & Preprocessing**"""

df.shape  #Displaying the shape

df.drop_duplicates(inplace=True) #Deleting all duplicate rows

df.shape   #Displaying the dataframe

"""**Handling Missing Values**"""

df.isnull().sum()  #Checking if we have null values

df.info()    #Checking the datatypes of each column

"""Here, Comparing the dtypes of each column with the values above, we understood that out dataframe has no null values and no missing values.

**Removing Outliers**
"""

#Displaying th boxplot
plt.figure(figsize = (9,9))
sns.boxplot(data=df.head(50),x="Price",y="Model")
plt.show()

#Displaying the boxplot
plt.figure(figsize = (9,9))
sns.boxplot(data=df.tail(50),x="Price",y="Model")
plt.show()

"""By looking at the above figures we can tell that our Dataframe do not have Outliers.

**Handling Categorical Data**
"""

df['Owner'].value_counts()  #Checking how many times each value is present in column 'Owner'

"""We are applying Label Encoding on 'Owner'"""

from sklearn.preprocessing import LabelEncoder  #Importing LabelEncoder
le = LabelEncoder() #Creating object

df.Owner = le.fit_transform(df.Owner) #Performing Label Encoder on Column Owner and updating in dataframe

df.head()  #Displaying the top 5 rows

"""**Handling Skewness**"""

from scipy.stats import skew  #Imporitng skew

#Bifurgating data based on their datatypes
df_num = df.select_dtypes('int64','float64')
df_cat = df.select_dtypes(object)

df_num.head()  #Displaying the top 5 entries

#Checking the skewness of each column in df_new
for col in df_num:
  print(col)
  print(skew(df_num[col]))

  plt.figure()
  sns.distplot(df_num[col])
  plt.show()

"""Note that:- 
1. Correlation of any column with target column should be in between -1.0 to 1.0. We say corelation is good.
2. Reduce or remove the Skewness for only those column whose Corelation is not good with the target/output column.
"""

df_num.corr()  #Checking the corelation of independant columns with target column

sns.heatmap(df_num.corr(),annot = True)  #Displaying the coorelation using Heatmap

df_num["Kms_driven"] = np.sqrt(df_num["Kms_driven"])  #Removing the skewness

df_num["Price"] = np.sqrt(df_num["Price"])  #Removing the skewness

df_num["Power_CC"] = np.sqrt(df_num["Power_CC"])  #Removing the skewness

#Displaying the graph & value of skewness  
for col in df_num:
  print(col)
  print(skew(df_num[col]))

  plt.figure()
  sns.distplot(df_num[col])
  plt.show()

"""**Scaling**"""

from sklearn.preprocessing import StandardScaler #importing ScandardScaler

#Scaling each column using the standard scaler  
for col in df_num:
	ss = StandardScaler()
	df_num[col] = ss.fit_transform(df_num[[col]])

df_num.head()  #Displaying the top 5 rows

df_new = pd.concat([df_cat,df_num],axis = 1)   #Concatenation of two dataframe

df_new.head()  #Displaying the to 5 rows

"""Now our dataframe is ready for applying any Machine Learning Algorithm"""

from sklearn.linear_model import LinearRegression #Importing Linear Regression
from sklearn.model_selection import train_test_split #Importing Test Train Split
from sklearn.metrics import r2_score #Importing R2_score

lr = LinearRegression()  #Creating an object

X_train,X_test,y_train,y_test = train_test_split(X,y,test_size = 0.4)  #Splitting Data in Testing data and Training Data

lr = LinearRegression()
lr.fit(X_train,y_train)  #Training the model

y_pred = lr.predict(X_test)  #predicting the value based on testing

(r2_score(y_test,y_pred))*100  #Calculation accuracy using R2-score

"""**CONCLUSION**

We have used the Data set of Used Bike and modelled it with a Machine Learning Algorithm so as to preict the Price providing different Parameters.
1. Initially, We import the dataset from drive and made a dataframe of it using pandas.
2. We performed Exploratory Data Analysis (EDA) in order to get rid of all the discrepencies from the dataset.
3. We divided the Data into Testing Data & Training Data then performed Machine Learning Algorithm called as Linear Regression on it. 
4. R2_score defines the accuracy of model which is 96% for our ML-Model.

"""